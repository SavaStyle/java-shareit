CREATE TABLE IF NOT EXISTS users
(
    user_id    BIGINT       NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_name  VARCHAR(255) NOT NULL,
    user_email VARCHAR(512) NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (user_id),
    CONSTRAINT uq_user_email UNIQUE (user_email)
);

CREATE TABLE IF NOT EXISTS items
(
    item_id      BIGINT       NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    item_name    VARCHAR(255) NOT NULL,
    description  VARCHAR(512),
    is_available BOOLEAN      NOT NULL,
    owner_id     BIGINT       NOT NULL,
    request_id   BIGINT,
    CONSTRAINT pk_item PRIMARY KEY (item_id),
    CONSTRAINT fk_item_owner FOREIGN KEY (owner_id) REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS bookings
(
    booking_id BIGINT      NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    start_time TIMESTAMP,
    end_time   TIMESTAMP,
    item_id    BIGINT      NOT NULL,
    booker_id  BIGINT      NOT NULL,
    status     VARCHAR(15) NOT NULL,
    CONSTRAINT pk_bookings PRIMARY KEY (booking_id),
    CONSTRAINT fk_item_id FOREIGN KEY (item_id) REFERENCES items (item_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_booker_id FOREIGN KEY (booker_id) REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS comments
(
    id           BIGINT       NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    item_id      BIGINT       NOT NULL,
    author_id    BIGINT       NOT NULL,
    comment_text VARCHAR(512) NOT NULL,
    created      TIMESTAMP    NOT NULL,
    CONSTRAINT pk_comments PRIMARY KEY (id),
    CONSTRAINT fk_comment_item_Id FOREIGN KEY (item_id) REFERENCES items (item_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_comment_user_id FOREIGN KEY (author_id) REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS requests
(
    request_id   BIGINT       NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    description  VARCHAR(225) NOT NULL,
    requestor_id BIGINT       NOT NULL,
    created      TIMESTAMP    NOT NULL,
    CONSTRAINT fk_requestor
        FOREIGN KEY (REQUESTOR_ID)
            REFERENCES USERS (user_id)
);